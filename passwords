#!/bin/bash

# Function to generate a secure password
generate_password() {
    local password_length=16
    password=$(openssl rand -base64 $password_length)
    echo $password
}

# Enforce strong password policies in /etc/login.defs
echo "Setting up secure password policies..."
sudo sed -i 's/PASS_MAX_DAYS.*/PASS_MAX_DAYS   90/' /etc/login.defs
sudo sed -i 's/PASS_MIN_DAYS.*/PASS_MIN_DAYS   7/' /etc/login.defs
sudo sed -i 's/PASS_MIN_LEN.*/PASS_MIN_LEN   12/' /etc/login.defs
sudo sed -i 's/PASS_WARN_AGE.*/PASS_WARN_AGE   14/' /etc/login.defs

# Set up common password settings in /etc/security/pwquality.conf
echo "minlen = 12" | sudo tee -a /etc/security/pwquality.conf
echo "dcredit = -1" | sudo tee -a /etc/security/pwquality.conf
echo "ucredit = -1" | sudo tee -a /etc/security/pwquality.conf
echo "lcredit = -1" | sudo tee -a /etc/security/pwquality.conf
echo "ocredit = -1" | sudo tee -a /etc/security/pwquality.conf

# Generate and set a new secure password for all users
echo "Updating passwords for all users..."

secure_password=$(generate_password)

while IFS=: read -r username _; do
    if [ "$username" != "root" ] && [ "$username" != "nobody" ]; then
        echo "Setting password for user: $username"
        passwd $username $password
        echo "$username:$secure_password" | sudo chpasswd
    fi
done < /etc/passwd

echo "All passwords updated. The secure password is: $secure_password"
